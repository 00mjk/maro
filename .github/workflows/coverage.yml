
name: coverage

on: [ push, pull_request, workflow_dispatch ]

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: [3.6]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build dependencies
      run: | 
        pip install -r maro/requirements.build.txt
    - name: Compile cython files
      run: |
        cython ./maro/backends/backend.pyx ./maro/backends/np_backend.pyx ./maro/backends/raw_backend.pyx ./maro/backends/frame.pyx -3 -E FRAME_BACKEND=NUMPY,NODES_MEMORY_LAYOUT=ONE_BLOCK -X embedsignature=True
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pip install -r ./tests/requirements.test.txt
        PYTHONPATH=/home/runner/work/maro/maro pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        files: ./coverage1.xml,./coverage2.xml
        directory: ./coverage/reports/
        flags: unittests
        env_vars: OS,PYTHON
        name: maro-code-coverage
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.gz
